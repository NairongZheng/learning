// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc_test.proto

#include "grpc_test.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_grpc_5ftest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CountAndSumResInstruct_grpc_5ftest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_5ftest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CountAndSumResInstruct_CountDictEntry_DoNotUse_grpc_5ftest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_5ftest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Letter_grpc_5ftest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_5ftest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NumList_grpc_5ftest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_5ftest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vector_grpc_5ftest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_grpc_5ftest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VectorList_grpc_5ftest_2eproto;
namespace grpc_test {
class VectorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vector> _instance;
} _Vector_default_instance_;
class VectorListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VectorList> _instance;
} _VectorList_default_instance_;
class GetMinDisReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMinDisReq> _instance;
} _GetMinDisReq_default_instance_;
class GetMinDisRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetMinDisRsp> _instance;
} _GetMinDisRsp_default_instance_;
class NumListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NumList> _instance;
} _NumList_default_instance_;
class CountAndSumListReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CountAndSumListReq> _instance;
} _CountAndSumListReq_default_instance_;
class CountAndSumResInstruct_CountDictEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CountAndSumResInstruct_CountDictEntry_DoNotUse> _instance;
} _CountAndSumResInstruct_CountDictEntry_DoNotUse_default_instance_;
class CountAndSumResInstructDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CountAndSumResInstruct> _instance;
} _CountAndSumResInstruct_default_instance_;
class CountAndSumListRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CountAndSumListRsp> _instance;
} _CountAndSumListRsp_default_instance_;
class LetterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Letter> _instance;
} _Letter_default_instance_;
class UpperLettersReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpperLettersReq> _instance;
} _UpperLettersReq_default_instance_;
class UpperLettersRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpperLettersRsp> _instance;
} _UpperLettersRsp_default_instance_;
class MessageDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageData> _instance;
} _MessageData_default_instance_;
}  // namespace grpc_test
static void InitDefaultsscc_info_CountAndSumListReq_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_CountAndSumListReq_default_instance_;
    new (ptr) ::grpc_test::CountAndSumListReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::CountAndSumListReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CountAndSumListReq_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CountAndSumListReq_grpc_5ftest_2eproto}, {
      &scc_info_NumList_grpc_5ftest_2eproto.base,}};

static void InitDefaultsscc_info_CountAndSumListRsp_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_CountAndSumListRsp_default_instance_;
    new (ptr) ::grpc_test::CountAndSumListRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::CountAndSumListRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CountAndSumListRsp_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CountAndSumListRsp_grpc_5ftest_2eproto}, {
      &scc_info_CountAndSumResInstruct_grpc_5ftest_2eproto.base,}};

static void InitDefaultsscc_info_CountAndSumResInstruct_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_CountAndSumResInstruct_default_instance_;
    new (ptr) ::grpc_test::CountAndSumResInstruct();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::CountAndSumResInstruct::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CountAndSumResInstruct_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CountAndSumResInstruct_grpc_5ftest_2eproto}, {
      &scc_info_CountAndSumResInstruct_CountDictEntry_DoNotUse_grpc_5ftest_2eproto.base,}};

static void InitDefaultsscc_info_CountAndSumResInstruct_CountDictEntry_DoNotUse_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_CountAndSumResInstruct_CountDictEntry_DoNotUse_default_instance_;
    new (ptr) ::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse();
  }
  ::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CountAndSumResInstruct_CountDictEntry_DoNotUse_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CountAndSumResInstruct_CountDictEntry_DoNotUse_grpc_5ftest_2eproto}, {}};

static void InitDefaultsscc_info_GetMinDisReq_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_GetMinDisReq_default_instance_;
    new (ptr) ::grpc_test::GetMinDisReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::GetMinDisReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetMinDisReq_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetMinDisReq_grpc_5ftest_2eproto}, {
      &scc_info_VectorList_grpc_5ftest_2eproto.base,}};

static void InitDefaultsscc_info_GetMinDisRsp_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_GetMinDisRsp_default_instance_;
    new (ptr) ::grpc_test::GetMinDisRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::GetMinDisRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetMinDisRsp_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetMinDisRsp_grpc_5ftest_2eproto}, {}};

static void InitDefaultsscc_info_Letter_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_Letter_default_instance_;
    new (ptr) ::grpc_test::Letter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::Letter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Letter_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Letter_grpc_5ftest_2eproto}, {}};

static void InitDefaultsscc_info_MessageData_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_MessageData_default_instance_;
    new (ptr) ::grpc_test::MessageData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::MessageData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessageData_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MessageData_grpc_5ftest_2eproto}, {}};

static void InitDefaultsscc_info_NumList_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_NumList_default_instance_;
    new (ptr) ::grpc_test::NumList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::NumList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NumList_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NumList_grpc_5ftest_2eproto}, {}};

static void InitDefaultsscc_info_UpperLettersReq_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_UpperLettersReq_default_instance_;
    new (ptr) ::grpc_test::UpperLettersReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::UpperLettersReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpperLettersReq_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpperLettersReq_grpc_5ftest_2eproto}, {
      &scc_info_Letter_grpc_5ftest_2eproto.base,}};

static void InitDefaultsscc_info_UpperLettersRsp_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_UpperLettersRsp_default_instance_;
    new (ptr) ::grpc_test::UpperLettersRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::UpperLettersRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpperLettersRsp_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpperLettersRsp_grpc_5ftest_2eproto}, {
      &scc_info_Letter_grpc_5ftest_2eproto.base,}};

static void InitDefaultsscc_info_Vector_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_Vector_default_instance_;
    new (ptr) ::grpc_test::Vector();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::Vector::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vector_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vector_grpc_5ftest_2eproto}, {}};

static void InitDefaultsscc_info_VectorList_grpc_5ftest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpc_test::_VectorList_default_instance_;
    new (ptr) ::grpc_test::VectorList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_test::VectorList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_VectorList_grpc_5ftest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_VectorList_grpc_5ftest_2eproto}, {
      &scc_info_Vector_grpc_5ftest_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpc_5ftest_2eproto[13];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpc_5ftest_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpc_5ftest_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpc_5ftest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::Vector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::Vector, x_),
  PROTOBUF_FIELD_OFFSET(::grpc_test::Vector, y_),
  PROTOBUF_FIELD_OFFSET(::grpc_test::Vector, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::VectorList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::VectorList, point_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::GetMinDisReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::GetMinDisReq, point_lists_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::GetMinDisRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::GetMinDisRsp, min_dis_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::NumList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::NumList, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumListReq, num_list_),
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumResInstruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumResInstruct, count_dict_),
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumResInstruct, sum_res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::CountAndSumListRsp, count_and_sum_res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::Letter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::Letter, s_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::UpperLettersReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::UpperLettersReq, letter_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::UpperLettersRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::UpperLettersRsp, letter_res_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpc_test::MessageData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpc_test::MessageData, id_),
  PROTOBUF_FIELD_OFFSET(::grpc_test::MessageData, name_),
  PROTOBUF_FIELD_OFFSET(::grpc_test::MessageData, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpc_test::Vector)},
  { 8, -1, sizeof(::grpc_test::VectorList)},
  { 14, -1, sizeof(::grpc_test::GetMinDisReq)},
  { 20, -1, sizeof(::grpc_test::GetMinDisRsp)},
  { 26, -1, sizeof(::grpc_test::NumList)},
  { 32, -1, sizeof(::grpc_test::CountAndSumListReq)},
  { 38, 45, sizeof(::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse)},
  { 47, -1, sizeof(::grpc_test::CountAndSumResInstruct)},
  { 54, -1, sizeof(::grpc_test::CountAndSumListRsp)},
  { 60, -1, sizeof(::grpc_test::Letter)},
  { 66, -1, sizeof(::grpc_test::UpperLettersReq)},
  { 72, -1, sizeof(::grpc_test::UpperLettersRsp)},
  { 78, -1, sizeof(::grpc_test::MessageData)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_Vector_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_VectorList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_GetMinDisReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_GetMinDisRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_NumList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_CountAndSumListReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_CountAndSumResInstruct_CountDictEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_CountAndSumResInstruct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_CountAndSumListRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_Letter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_UpperLettersReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_UpperLettersRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpc_test::_MessageData_default_instance_),
};

const char descriptor_table_protodef_grpc_5ftest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017grpc_test.proto\022\tgrpc_test\")\n\006Vector\022\t"
  "\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"3\n\nVecto"
  "rList\022%\n\npoint_list\030\001 \003(\0132\021.grpc_test.Ve"
  "ctor\":\n\014GetMinDisReq\022*\n\013point_lists\030\001 \003("
  "\0132\025.grpc_test.VectorList\"\037\n\014GetMinDisRsp"
  "\022\017\n\007min_dis\030\001 \003(\002\"\026\n\007NumList\022\013\n\003num\030\001 \003("
  "\002\":\n\022CountAndSumListReq\022$\n\010num_list\030\001 \003("
  "\0132\022.grpc_test.NumList\"\241\001\n\026CountAndSumRes"
  "Instruct\022D\n\ncount_dict\030\001 \003(\01320.grpc_test"
  ".CountAndSumResInstruct.CountDictEntry\022\017"
  "\n\007sum_res\030\002 \001(\002\0320\n\016CountDictEntry\022\013\n\003key"
  "\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\"R\n\022CountAndSum"
  "ListRsp\022<\n\021count_and_sum_res\030\001 \003(\0132!.grp"
  "c_test.CountAndSumResInstruct\"\023\n\006Letter\022"
  "\t\n\001s\030\001 \001(\t\"9\n\017UpperLettersReq\022&\n\013letter_"
  "list\030\001 \003(\0132\021.grpc_test.Letter\"=\n\017UpperLe"
  "ttersRsp\022*\n\017letter_res_list\030\001 \003(\0132\021.grpc"
  "_test.Letter\"5\n\013MessageData\022\n\n\002id\030\001 \001(\005\022"
  "\014\n\004name\030\002 \001(\t\022\014\n\004data\030\003 \001(\0142J\n\tProtoTest"
  "\022=\n\tdoRequest\022\026.grpc_test.MessageData\032\026."
  "grpc_test.MessageData\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpc_5ftest_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_grpc_5ftest_2eproto_sccs[13] = {
  &scc_info_CountAndSumListReq_grpc_5ftest_2eproto.base,
  &scc_info_CountAndSumListRsp_grpc_5ftest_2eproto.base,
  &scc_info_CountAndSumResInstruct_grpc_5ftest_2eproto.base,
  &scc_info_CountAndSumResInstruct_CountDictEntry_DoNotUse_grpc_5ftest_2eproto.base,
  &scc_info_GetMinDisReq_grpc_5ftest_2eproto.base,
  &scc_info_GetMinDisRsp_grpc_5ftest_2eproto.base,
  &scc_info_Letter_grpc_5ftest_2eproto.base,
  &scc_info_MessageData_grpc_5ftest_2eproto.base,
  &scc_info_NumList_grpc_5ftest_2eproto.base,
  &scc_info_UpperLettersReq_grpc_5ftest_2eproto.base,
  &scc_info_UpperLettersRsp_grpc_5ftest_2eproto.base,
  &scc_info_Vector_grpc_5ftest_2eproto.base,
  &scc_info_VectorList_grpc_5ftest_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpc_5ftest_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpc_5ftest_2eproto = {
  false, false, descriptor_table_protodef_grpc_5ftest_2eproto, "grpc_test.proto", 831,
  &descriptor_table_grpc_5ftest_2eproto_once, descriptor_table_grpc_5ftest_2eproto_sccs, descriptor_table_grpc_5ftest_2eproto_deps, 13, 0,
  schemas, file_default_instances, TableStruct_grpc_5ftest_2eproto::offsets,
  file_level_metadata_grpc_5ftest_2eproto, 13, file_level_enum_descriptors_grpc_5ftest_2eproto, file_level_service_descriptors_grpc_5ftest_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_grpc_5ftest_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_grpc_5ftest_2eproto)), true);
namespace grpc_test {

// ===================================================================

void Vector::InitAsDefaultInstance() {
}
class Vector::_Internal {
 public:
};

Vector::Vector(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.Vector)
}
Vector::Vector(const Vector& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:grpc_test.Vector)
}

void Vector::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vector::~Vector() {
  // @@protoc_insertion_point(destructor:grpc_test.Vector)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vector::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Vector::ArenaDtor(void* object) {
  Vector* _this = reinterpret_cast< Vector* >(object);
  (void)_this;
}
void Vector::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vector::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vector& Vector::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vector_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.Vector)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vector::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vector::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.Vector)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_x(), target);
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_y(), target);
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.Vector)
  return target;
}

size_t Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.Vector)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vector>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.Vector)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.Vector)
    MergeFrom(*source);
  }
}

void Vector::MergeFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void Vector::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector::IsInitialized() const {
  return true;
}

void Vector::InternalSwap(Vector* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vector, z_)
      + sizeof(Vector::z_)
      - PROTOBUF_FIELD_OFFSET(Vector, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vector::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void VectorList::InitAsDefaultInstance() {
}
class VectorList::_Internal {
 public:
};

VectorList::VectorList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  point_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.VectorList)
}
VectorList::VectorList(const VectorList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      point_list_(from.point_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_test.VectorList)
}

void VectorList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VectorList_grpc_5ftest_2eproto.base);
}

VectorList::~VectorList() {
  // @@protoc_insertion_point(destructor:grpc_test.VectorList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VectorList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void VectorList::ArenaDtor(void* object) {
  VectorList* _this = reinterpret_cast< VectorList* >(object);
  (void)_this;
}
void VectorList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VectorList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VectorList& VectorList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VectorList_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void VectorList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.VectorList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VectorList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_test.Vector point_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_point_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VectorList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.VectorList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_test.Vector point_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_point_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_point_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.VectorList)
  return target;
}

size_t VectorList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.VectorList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_test.Vector point_list = 1;
  total_size += 1UL * this->_internal_point_list_size();
  for (const auto& msg : this->point_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VectorList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.VectorList)
  GOOGLE_DCHECK_NE(&from, this);
  const VectorList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VectorList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.VectorList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.VectorList)
    MergeFrom(*source);
  }
}

void VectorList::MergeFrom(const VectorList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.VectorList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_list_.MergeFrom(from.point_list_);
}

void VectorList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.VectorList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VectorList::CopyFrom(const VectorList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.VectorList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VectorList::IsInitialized() const {
  return true;
}

void VectorList::InternalSwap(VectorList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  point_list_.InternalSwap(&other->point_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VectorList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMinDisReq::InitAsDefaultInstance() {
}
class GetMinDisReq::_Internal {
 public:
};

GetMinDisReq::GetMinDisReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  point_lists_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.GetMinDisReq)
}
GetMinDisReq::GetMinDisReq(const GetMinDisReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      point_lists_(from.point_lists_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_test.GetMinDisReq)
}

void GetMinDisReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetMinDisReq_grpc_5ftest_2eproto.base);
}

GetMinDisReq::~GetMinDisReq() {
  // @@protoc_insertion_point(destructor:grpc_test.GetMinDisReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMinDisReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMinDisReq::ArenaDtor(void* object) {
  GetMinDisReq* _this = reinterpret_cast< GetMinDisReq* >(object);
  (void)_this;
}
void GetMinDisReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMinDisReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMinDisReq& GetMinDisReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMinDisReq_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void GetMinDisReq::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.GetMinDisReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_lists_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMinDisReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_test.VectorList point_lists = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_point_lists(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMinDisReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.GetMinDisReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_test.VectorList point_lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_point_lists_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_point_lists(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.GetMinDisReq)
  return target;
}

size_t GetMinDisReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.GetMinDisReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_test.VectorList point_lists = 1;
  total_size += 1UL * this->_internal_point_lists_size();
  for (const auto& msg : this->point_lists_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMinDisReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.GetMinDisReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMinDisReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMinDisReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.GetMinDisReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.GetMinDisReq)
    MergeFrom(*source);
  }
}

void GetMinDisReq::MergeFrom(const GetMinDisReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.GetMinDisReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_lists_.MergeFrom(from.point_lists_);
}

void GetMinDisReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.GetMinDisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMinDisReq::CopyFrom(const GetMinDisReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.GetMinDisReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMinDisReq::IsInitialized() const {
  return true;
}

void GetMinDisReq::InternalSwap(GetMinDisReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  point_lists_.InternalSwap(&other->point_lists_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMinDisReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetMinDisRsp::InitAsDefaultInstance() {
}
class GetMinDisRsp::_Internal {
 public:
};

GetMinDisRsp::GetMinDisRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  min_dis_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.GetMinDisRsp)
}
GetMinDisRsp::GetMinDisRsp(const GetMinDisRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      min_dis_(from.min_dis_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_test.GetMinDisRsp)
}

void GetMinDisRsp::SharedCtor() {
}

GetMinDisRsp::~GetMinDisRsp() {
  // @@protoc_insertion_point(destructor:grpc_test.GetMinDisRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetMinDisRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetMinDisRsp::ArenaDtor(void* object) {
  GetMinDisRsp* _this = reinterpret_cast< GetMinDisRsp* >(object);
  (void)_this;
}
void GetMinDisRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetMinDisRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMinDisRsp& GetMinDisRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetMinDisRsp_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void GetMinDisRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.GetMinDisRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  min_dis_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetMinDisRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated float min_dis = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_min_dis(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13) {
          _internal_add_min_dis(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetMinDisRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.GetMinDisRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float min_dis = 1;
  if (this->_internal_min_dis_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_min_dis(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.GetMinDisRsp)
  return target;
}

size_t GetMinDisRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.GetMinDisRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float min_dis = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_min_dis_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _min_dis_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMinDisRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.GetMinDisRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMinDisRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetMinDisRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.GetMinDisRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.GetMinDisRsp)
    MergeFrom(*source);
  }
}

void GetMinDisRsp::MergeFrom(const GetMinDisRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.GetMinDisRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  min_dis_.MergeFrom(from.min_dis_);
}

void GetMinDisRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.GetMinDisRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMinDisRsp::CopyFrom(const GetMinDisRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.GetMinDisRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMinDisRsp::IsInitialized() const {
  return true;
}

void GetMinDisRsp::InternalSwap(GetMinDisRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  min_dis_.InternalSwap(&other->min_dis_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetMinDisRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NumList::InitAsDefaultInstance() {
}
class NumList::_Internal {
 public:
};

NumList::NumList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  num_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.NumList)
}
NumList::NumList(const NumList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      num_(from.num_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_test.NumList)
}

void NumList::SharedCtor() {
}

NumList::~NumList() {
  // @@protoc_insertion_point(destructor:grpc_test.NumList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NumList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void NumList::ArenaDtor(void* object) {
  NumList* _this = reinterpret_cast< NumList* >(object);
  (void)_this;
}
void NumList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NumList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NumList& NumList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NumList_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void NumList::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.NumList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NumList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated float num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_num(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13) {
          _internal_add_num(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NumList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.NumList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float num = 1;
  if (this->_internal_num_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.NumList)
  return target;
}

size_t NumList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.NumList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float num = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_num_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _num_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NumList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.NumList)
  GOOGLE_DCHECK_NE(&from, this);
  const NumList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NumList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.NumList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.NumList)
    MergeFrom(*source);
  }
}

void NumList::MergeFrom(const NumList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.NumList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  num_.MergeFrom(from.num_);
}

void NumList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.NumList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumList::CopyFrom(const NumList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.NumList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumList::IsInitialized() const {
  return true;
}

void NumList::InternalSwap(NumList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  num_.InternalSwap(&other->num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NumList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CountAndSumListReq::InitAsDefaultInstance() {
}
class CountAndSumListReq::_Internal {
 public:
};

CountAndSumListReq::CountAndSumListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  num_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.CountAndSumListReq)
}
CountAndSumListReq::CountAndSumListReq(const CountAndSumListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      num_list_(from.num_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_test.CountAndSumListReq)
}

void CountAndSumListReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CountAndSumListReq_grpc_5ftest_2eproto.base);
}

CountAndSumListReq::~CountAndSumListReq() {
  // @@protoc_insertion_point(destructor:grpc_test.CountAndSumListReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CountAndSumListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CountAndSumListReq::ArenaDtor(void* object) {
  CountAndSumListReq* _this = reinterpret_cast< CountAndSumListReq* >(object);
  (void)_this;
}
void CountAndSumListReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CountAndSumListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CountAndSumListReq& CountAndSumListReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CountAndSumListReq_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void CountAndSumListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.CountAndSumListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CountAndSumListReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_test.NumList num_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_num_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CountAndSumListReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.CountAndSumListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_test.NumList num_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_num_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_num_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.CountAndSumListReq)
  return target;
}

size_t CountAndSumListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.CountAndSumListReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_test.NumList num_list = 1;
  total_size += 1UL * this->_internal_num_list_size();
  for (const auto& msg : this->num_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CountAndSumListReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.CountAndSumListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CountAndSumListReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CountAndSumListReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.CountAndSumListReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.CountAndSumListReq)
    MergeFrom(*source);
  }
}

void CountAndSumListReq::MergeFrom(const CountAndSumListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.CountAndSumListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  num_list_.MergeFrom(from.num_list_);
}

void CountAndSumListReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.CountAndSumListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountAndSumListReq::CopyFrom(const CountAndSumListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.CountAndSumListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountAndSumListReq::IsInitialized() const {
  return true;
}

void CountAndSumListReq::InternalSwap(CountAndSumListReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  num_list_.InternalSwap(&other->num_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CountAndSumListReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

CountAndSumResInstruct_CountDictEntry_DoNotUse::CountAndSumResInstruct_CountDictEntry_DoNotUse() {}
CountAndSumResInstruct_CountDictEntry_DoNotUse::CountAndSumResInstruct_CountDictEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CountAndSumResInstruct_CountDictEntry_DoNotUse::MergeFrom(const CountAndSumResInstruct_CountDictEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CountAndSumResInstruct_CountDictEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CountAndSumResInstruct_CountDictEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void CountAndSumResInstruct::InitAsDefaultInstance() {
}
class CountAndSumResInstruct::_Internal {
 public:
};

CountAndSumResInstruct::CountAndSumResInstruct(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  count_dict_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.CountAndSumResInstruct)
}
CountAndSumResInstruct::CountAndSumResInstruct(const CountAndSumResInstruct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  count_dict_.MergeFrom(from.count_dict_);
  sum_res_ = from.sum_res_;
  // @@protoc_insertion_point(copy_constructor:grpc_test.CountAndSumResInstruct)
}

void CountAndSumResInstruct::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CountAndSumResInstruct_grpc_5ftest_2eproto.base);
  sum_res_ = 0;
}

CountAndSumResInstruct::~CountAndSumResInstruct() {
  // @@protoc_insertion_point(destructor:grpc_test.CountAndSumResInstruct)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CountAndSumResInstruct::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CountAndSumResInstruct::ArenaDtor(void* object) {
  CountAndSumResInstruct* _this = reinterpret_cast< CountAndSumResInstruct* >(object);
  (void)_this;
}
void CountAndSumResInstruct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CountAndSumResInstruct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CountAndSumResInstruct& CountAndSumResInstruct::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CountAndSumResInstruct_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void CountAndSumResInstruct::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.CountAndSumResInstruct)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_dict_.Clear();
  sum_res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CountAndSumResInstruct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, int32> count_dict = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&count_dict_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // float sum_res = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          sum_res_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CountAndSumResInstruct::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.CountAndSumResInstruct)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, int32> count_dict = 1;
  if (!this->_internal_count_dict().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "grpc_test.CountAndSumResInstruct.CountDictEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_count_dict().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_count_dict().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_count_dict().begin();
          it != this->_internal_count_dict().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CountAndSumResInstruct_CountDictEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_count_dict().begin();
          it != this->_internal_count_dict().end(); ++it) {
        target = CountAndSumResInstruct_CountDictEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // float sum_res = 2;
  if (!(this->sum_res() <= 0 && this->sum_res() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_sum_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.CountAndSumResInstruct)
  return target;
}

size_t CountAndSumResInstruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.CountAndSumResInstruct)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, int32> count_dict = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_count_dict_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
      it = this->_internal_count_dict().begin();
      it != this->_internal_count_dict().end(); ++it) {
    total_size += CountAndSumResInstruct_CountDictEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // float sum_res = 2;
  if (!(this->sum_res() <= 0 && this->sum_res() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CountAndSumResInstruct::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.CountAndSumResInstruct)
  GOOGLE_DCHECK_NE(&from, this);
  const CountAndSumResInstruct* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CountAndSumResInstruct>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.CountAndSumResInstruct)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.CountAndSumResInstruct)
    MergeFrom(*source);
  }
}

void CountAndSumResInstruct::MergeFrom(const CountAndSumResInstruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.CountAndSumResInstruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  count_dict_.MergeFrom(from.count_dict_);
  if (!(from.sum_res() <= 0 && from.sum_res() >= 0)) {
    _internal_set_sum_res(from._internal_sum_res());
  }
}

void CountAndSumResInstruct::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.CountAndSumResInstruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountAndSumResInstruct::CopyFrom(const CountAndSumResInstruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.CountAndSumResInstruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountAndSumResInstruct::IsInitialized() const {
  return true;
}

void CountAndSumResInstruct::InternalSwap(CountAndSumResInstruct* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  count_dict_.Swap(&other->count_dict_);
  swap(sum_res_, other->sum_res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CountAndSumResInstruct::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CountAndSumListRsp::InitAsDefaultInstance() {
}
class CountAndSumListRsp::_Internal {
 public:
};

CountAndSumListRsp::CountAndSumListRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  count_and_sum_res_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.CountAndSumListRsp)
}
CountAndSumListRsp::CountAndSumListRsp(const CountAndSumListRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      count_and_sum_res_(from.count_and_sum_res_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_test.CountAndSumListRsp)
}

void CountAndSumListRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CountAndSumListRsp_grpc_5ftest_2eproto.base);
}

CountAndSumListRsp::~CountAndSumListRsp() {
  // @@protoc_insertion_point(destructor:grpc_test.CountAndSumListRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CountAndSumListRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CountAndSumListRsp::ArenaDtor(void* object) {
  CountAndSumListRsp* _this = reinterpret_cast< CountAndSumListRsp* >(object);
  (void)_this;
}
void CountAndSumListRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CountAndSumListRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CountAndSumListRsp& CountAndSumListRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CountAndSumListRsp_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void CountAndSumListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.CountAndSumListRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_and_sum_res_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CountAndSumListRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_test.CountAndSumResInstruct count_and_sum_res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_count_and_sum_res(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CountAndSumListRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.CountAndSumListRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_test.CountAndSumResInstruct count_and_sum_res = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_count_and_sum_res_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_count_and_sum_res(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.CountAndSumListRsp)
  return target;
}

size_t CountAndSumListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.CountAndSumListRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_test.CountAndSumResInstruct count_and_sum_res = 1;
  total_size += 1UL * this->_internal_count_and_sum_res_size();
  for (const auto& msg : this->count_and_sum_res_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CountAndSumListRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.CountAndSumListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CountAndSumListRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CountAndSumListRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.CountAndSumListRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.CountAndSumListRsp)
    MergeFrom(*source);
  }
}

void CountAndSumListRsp::MergeFrom(const CountAndSumListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.CountAndSumListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  count_and_sum_res_.MergeFrom(from.count_and_sum_res_);
}

void CountAndSumListRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.CountAndSumListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountAndSumListRsp::CopyFrom(const CountAndSumListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.CountAndSumListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountAndSumListRsp::IsInitialized() const {
  return true;
}

void CountAndSumListRsp::InternalSwap(CountAndSumListRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  count_and_sum_res_.InternalSwap(&other->count_and_sum_res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CountAndSumListRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Letter::InitAsDefaultInstance() {
}
class Letter::_Internal {
 public:
};

Letter::Letter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.Letter)
}
Letter::Letter(const Letter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_s().empty()) {
    s_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_s(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:grpc_test.Letter)
}

void Letter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Letter_grpc_5ftest_2eproto.base);
  s_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Letter::~Letter() {
  // @@protoc_insertion_point(destructor:grpc_test.Letter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Letter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  s_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Letter::ArenaDtor(void* object) {
  Letter* _this = reinterpret_cast< Letter* >(object);
  (void)_this;
}
void Letter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Letter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Letter& Letter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Letter_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void Letter::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.Letter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Letter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string s = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_s();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_test.Letter.s"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Letter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.Letter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string s = 1;
  if (this->s().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_s().data(), static_cast<int>(this->_internal_s().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_test.Letter.s");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.Letter)
  return target;
}

size_t Letter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.Letter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string s = 1;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_s());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Letter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.Letter)
  GOOGLE_DCHECK_NE(&from, this);
  const Letter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Letter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.Letter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.Letter)
    MergeFrom(*source);
  }
}

void Letter::MergeFrom(const Letter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.Letter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.s().size() > 0) {
    _internal_set_s(from._internal_s());
  }
}

void Letter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.Letter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Letter::CopyFrom(const Letter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.Letter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Letter::IsInitialized() const {
  return true;
}

void Letter::InternalSwap(Letter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  s_.Swap(&other->s_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Letter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpperLettersReq::InitAsDefaultInstance() {
}
class UpperLettersReq::_Internal {
 public:
};

UpperLettersReq::UpperLettersReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  letter_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.UpperLettersReq)
}
UpperLettersReq::UpperLettersReq(const UpperLettersReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      letter_list_(from.letter_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_test.UpperLettersReq)
}

void UpperLettersReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpperLettersReq_grpc_5ftest_2eproto.base);
}

UpperLettersReq::~UpperLettersReq() {
  // @@protoc_insertion_point(destructor:grpc_test.UpperLettersReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpperLettersReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpperLettersReq::ArenaDtor(void* object) {
  UpperLettersReq* _this = reinterpret_cast< UpperLettersReq* >(object);
  (void)_this;
}
void UpperLettersReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpperLettersReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpperLettersReq& UpperLettersReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpperLettersReq_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void UpperLettersReq::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.UpperLettersReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  letter_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpperLettersReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_test.Letter letter_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_letter_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpperLettersReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.UpperLettersReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_test.Letter letter_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_letter_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_letter_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.UpperLettersReq)
  return target;
}

size_t UpperLettersReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.UpperLettersReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_test.Letter letter_list = 1;
  total_size += 1UL * this->_internal_letter_list_size();
  for (const auto& msg : this->letter_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpperLettersReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.UpperLettersReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpperLettersReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpperLettersReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.UpperLettersReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.UpperLettersReq)
    MergeFrom(*source);
  }
}

void UpperLettersReq::MergeFrom(const UpperLettersReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.UpperLettersReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  letter_list_.MergeFrom(from.letter_list_);
}

void UpperLettersReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.UpperLettersReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpperLettersReq::CopyFrom(const UpperLettersReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.UpperLettersReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpperLettersReq::IsInitialized() const {
  return true;
}

void UpperLettersReq::InternalSwap(UpperLettersReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  letter_list_.InternalSwap(&other->letter_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpperLettersReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpperLettersRsp::InitAsDefaultInstance() {
}
class UpperLettersRsp::_Internal {
 public:
};

UpperLettersRsp::UpperLettersRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  letter_res_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.UpperLettersRsp)
}
UpperLettersRsp::UpperLettersRsp(const UpperLettersRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      letter_res_list_(from.letter_res_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_test.UpperLettersRsp)
}

void UpperLettersRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpperLettersRsp_grpc_5ftest_2eproto.base);
}

UpperLettersRsp::~UpperLettersRsp() {
  // @@protoc_insertion_point(destructor:grpc_test.UpperLettersRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpperLettersRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UpperLettersRsp::ArenaDtor(void* object) {
  UpperLettersRsp* _this = reinterpret_cast< UpperLettersRsp* >(object);
  (void)_this;
}
void UpperLettersRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpperLettersRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpperLettersRsp& UpperLettersRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpperLettersRsp_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void UpperLettersRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.UpperLettersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  letter_res_list_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpperLettersRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .grpc_test.Letter letter_res_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_letter_res_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpperLettersRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.UpperLettersRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_test.Letter letter_res_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_letter_res_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_letter_res_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.UpperLettersRsp)
  return target;
}

size_t UpperLettersRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.UpperLettersRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpc_test.Letter letter_res_list = 1;
  total_size += 1UL * this->_internal_letter_res_list_size();
  for (const auto& msg : this->letter_res_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpperLettersRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.UpperLettersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpperLettersRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpperLettersRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.UpperLettersRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.UpperLettersRsp)
    MergeFrom(*source);
  }
}

void UpperLettersRsp::MergeFrom(const UpperLettersRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.UpperLettersRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  letter_res_list_.MergeFrom(from.letter_res_list_);
}

void UpperLettersRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.UpperLettersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpperLettersRsp::CopyFrom(const UpperLettersRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.UpperLettersRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpperLettersRsp::IsInitialized() const {
  return true;
}

void UpperLettersRsp::InternalSwap(UpperLettersRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  letter_res_list_.InternalSwap(&other->letter_res_list_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpperLettersRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageData::InitAsDefaultInstance() {
}
class MessageData::_Internal {
 public:
};

MessageData::MessageData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_test.MessageData)
}
MessageData::MessageData(const MessageData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:grpc_test.MessageData)
}

void MessageData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageData_grpc_5ftest_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

MessageData::~MessageData() {
  // @@protoc_insertion_point(destructor:grpc_test.MessageData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MessageData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MessageData::ArenaDtor(void* object) {
  MessageData* _this = reinterpret_cast< MessageData* >(object);
  (void)_this;
}
void MessageData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessageData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageData& MessageData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageData_grpc_5ftest_2eproto.base);
  return *internal_default_instance();
}


void MessageData::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_test.MessageData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "grpc_test.MessageData.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_test.MessageData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpc_test.MessageData.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_test.MessageData)
  return target;
}

size_t MessageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_test.MessageData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_test.MessageData)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_test.MessageData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_test.MessageData)
    MergeFrom(*source);
  }
}

void MessageData::MergeFrom(const MessageData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_test.MessageData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void MessageData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_test.MessageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageData::CopyFrom(const MessageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_test.MessageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageData::IsInitialized() const {
  return true;
}

void MessageData::InternalSwap(MessageData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageData::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc_test
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpc_test::Vector* Arena::CreateMaybeMessage< ::grpc_test::Vector >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::Vector >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::VectorList* Arena::CreateMaybeMessage< ::grpc_test::VectorList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::VectorList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::GetMinDisReq* Arena::CreateMaybeMessage< ::grpc_test::GetMinDisReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::GetMinDisReq >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::GetMinDisRsp* Arena::CreateMaybeMessage< ::grpc_test::GetMinDisRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::GetMinDisRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::NumList* Arena::CreateMaybeMessage< ::grpc_test::NumList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::NumList >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::CountAndSumListReq* Arena::CreateMaybeMessage< ::grpc_test::CountAndSumListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::CountAndSumListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse* Arena::CreateMaybeMessage< ::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::CountAndSumResInstruct_CountDictEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::CountAndSumResInstruct* Arena::CreateMaybeMessage< ::grpc_test::CountAndSumResInstruct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::CountAndSumResInstruct >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::CountAndSumListRsp* Arena::CreateMaybeMessage< ::grpc_test::CountAndSumListRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::CountAndSumListRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::Letter* Arena::CreateMaybeMessage< ::grpc_test::Letter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::Letter >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::UpperLettersReq* Arena::CreateMaybeMessage< ::grpc_test::UpperLettersReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::UpperLettersReq >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::UpperLettersRsp* Arena::CreateMaybeMessage< ::grpc_test::UpperLettersRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::UpperLettersRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::grpc_test::MessageData* Arena::CreateMaybeMessage< ::grpc_test::MessageData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpc_test::MessageData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
